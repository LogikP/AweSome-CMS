AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.

Parameters:
  StageName:
    Type: String
  CicdBucket:
    Type: String

Resources:


  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html
  DefaultApi:
    Type: AWS::Serverless::Api
    Properties:
      GatewayResponses:
        BAD_REQUEST_BODY:
          ResponseTemplates:
            "application/json": '{ "message": "$context.error.validationErrorString"}'
      StageName: live
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            # Chemin vers la spec OpenAPI
            Location: !Sub "s3://${CicdBucket}/spec/api-spec.yaml"

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  FindSongsFunction:
    Type: AWS::Serverless::Function
    Properties:
      # Chemin du handler de la lambda
      Handler: src.handler.find_by_author_and_title
      # Runtime utilisé pour l'exécution de la lambda
      Runtime: python3.7
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      # Droits IAM affectés à la l'exécution de la lambda
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ArticleTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DefaultApi
            Path: /songs
            Method: GET
      # Variables d'environnement
      Environment:
        Variables:
          TABLE_NAME: !Ref ArticleTable
          
          
  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src.handler.signup
      Runtime: python3.7
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DefaultApi
            Path: /users/signup
            Method: POST
  
  ConfirmedSignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src.handler.confirm_signup
      Runtime: python3.7
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DefaultApi
            Path: /users/confirmeAccount
            Method: POST 

  SignInFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src.handler.signin
      Runtime: python3.7
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DefaultApi
            Path: /users/signin
            Method: POST

  CreateArticleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src.handler.create_article
      Runtime: python3.7
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ArticleTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DefaultApi
            Path: /articles
            Method: POST
      Environment:
        Variables:
          TABLE_NAME: !Ref ArticleTable

  DeleteSongFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src.handler.delete_song
      Runtime: python3.7
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ArticleTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DefaultApi
            Path: /songs/{song_id}
            Method: DELETE
      Environment:
        Variables:
          TABLE_NAME: !Ref ArticleTable
  
  ArticleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "awesomecms-${StageName}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
        - AttributeName: author
          AttributeType: S
        - AttributeName: date
          AttributeType: S
        - AttributeName: title
          AttributeType: S
      KeySchema:
        - AttributeName: author
          KeyType: HASH
        - AttributeName: title
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: author-date
          KeySchema:
            - AttributeName: author
              KeyType: HASH
            - AttributeName: date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      GlobalSecondaryIndexes:
        - IndexName: uuid
          KeySchema:
            - AttributeName: uuid
              KeyType: HASH
          Projection:
            ProjectionType: ALL